#!/usr/bin/python3

import sys
import random
import time

def is_prime(num, k=20):
    '''
    Miller-Rabin primality test to check if a number is prime.
    '''
    if num == 2 or num == 3:
        return True
    if num < 2 or num % 2 == 0:
        return False

    d, r = num - 1, 0
    while d % 2 == 0:
        d //= 2
        r += 1

    for _ in range(k):
        a = random.randint(2, num - 2)
        x = pow(a, d, num)
        if x == 1 or x == num - 1:
            continue
        for _ in range(r - 1):
            x = pow(x, 2, num)
            if x == num - 1:
                break
        else:
            return False

    return True

def factorize_rsa_number(num, time_limit=5):
    '''
    Factorize an RSA number into its prime factors.
    '''
    start_time = time.time()

    for i in range(2, num // 2):
        if num % i == 0 and is_prime(i) and is_prime(num // i):
            print(f"{num}={i}*{num//i}")
            return

        if time.time() - start_time > time_limit:
            print("Time limit exceeded")
            sys.exit()

    print(f"No prime factorization found for {num}")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: ./rsa.py <filename>")
        sys.exit()

    input_file = sys.argv[1]

    try:
        with open(input_file, 'r') as f:
            rsa_number = int(f.readline().strip())
    except FileNotFoundError:
        print("File not found")
        sys.exit()
    except ValueError:
        print("Invalid RSA number in the file")
        sys.exit()

    factorize_rsa_number(rsa_number)
